package com.github.sqyyy.urban.assembler.model;
// This file is automatically generated.
// It is not intended for manual editing.

import com.github.sqyyy.urban.assembler.util.OpCodes;

/**
 * This interface contains builder methods for each instruction in ISA version {@code 1.0}.
 */
@SuppressWarnings("unchecked")
public interface Instructable<S extends Instructable<S>> {
    void addInstruction(Instruction instruction);

    /**
     * {@code add Xdst Xlhs u17}
     */
    default S add(Register dst, Register lhs, long rhs) {
        var opcode = OpCodes.L0_ADD;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs & 0x1ffff) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code sub Xdst Xlhs u17}
     */
    default S sub(Register dst, Register lhs, long rhs) {
        var opcode = OpCodes.L0_SUB;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs & 0x1ffff) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code mul Xdst Xlhs u17}
     */
    default S mul(Register dst, Register lhs, long rhs) {
        var opcode = OpCodes.L0_MUL;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs & 0x1ffff) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code div Xdst Xlhs u17}
     */
    default S div(Register dst, Register lhs, long rhs) {
        var opcode = OpCodes.L0_DIV;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs & 0x1ffff) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code adds Xdst Xlhs i17}
     */
    default S adds(Register dst, Register lhs, long rhs) {
        var opcode = OpCodes.L0_ADDS;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs & 0x1ffff) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code subs Xdst Xlhs i17}
     */
    default S subs(Register dst, Register lhs, long rhs) {
        var opcode = OpCodes.L0_SUBS;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs & 0x1ffff) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code muls Xdst Xlhs i17}
     */
    default S muls(Register dst, Register lhs, long rhs) {
        var opcode = OpCodes.L0_MULS;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs & 0x1ffff) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code divs Xdst Xlhs i17}
     */
    default S divs(Register dst, Register lhs, long rhs) {
        var opcode = OpCodes.L0_DIVS;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs & 0x1ffff) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code ldr Xdst i22}
     */
    default S ldr(Register dst, long src) {
        var opcode = OpCodes.L0_LDR;
        opcode |= dst.num() & 0x1f;
        opcode |= (src & 0x3fffff) << 5;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code str i22 Xsrc}
     */
    default S str(long dst, Register src) {
        var opcode = OpCodes.L0_STR;
        opcode |= dst & 0x3fffff;
        opcode |= (src.num() & 0x1f) << 22;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code mov Xdst u22}
     */
    default S mov(Register dst, long value) {
        var opcode = OpCodes.L0_MOV;
        opcode |= dst.num() & 0x1f;
        opcode |= (value & 0x3fffff) << 5;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code movs Xdst i22}
     */
    default S movs(Register dst, long value) {
        var opcode = OpCodes.L0_MOVS;
        opcode |= dst.num() & 0x1f;
        opcode |= (value & 0x3fffff) << 5;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code branch i27}
     */
    default S branch(long dst) {
        var opcode = OpCodes.L0_BRANCH;
        opcode |= dst & 0x7ffffff;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code branch.l i27}
     */
    default S branchL(long dst) {
        var opcode = OpCodes.L0_BRANCH_L;
        opcode |= dst & 0x7ffffff;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code branch.ld i27}
     */
    default S branchLd(long src) {
        var opcode = OpCodes.L0_BRANCH_LD;
        opcode |= src & 0x7ffffff;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code branch.l.ld i27}
     */
    default S branchLLd(long src) {
        var opcode = OpCodes.L0_BRANCH_L_LD;
        opcode |= src & 0x7ffffff;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code branch.eq i22 Xcond}
     */
    default S branchEq(long dst, Register cond) {
        var opcode = OpCodes.L0_BRANCH_EQ;
        opcode |= dst & 0x3fffff;
        opcode |= (cond.num() & 0x1f) << 22;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code branch.ne i22 Xcond}
     */
    default S branchNe(long dst, Register cond) {
        var opcode = OpCodes.L0_BRANCH_NE;
        opcode |= dst & 0x3fffff;
        opcode |= (cond.num() & 0x1f) << 22;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code branch.lt i22 Xcond}
     */
    default S branchLt(long dst, Register cond) {
        var opcode = OpCodes.L0_BRANCH_LT;
        opcode |= dst & 0x3fffff;
        opcode |= (cond.num() & 0x1f) << 22;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code branch.gt i22 Xcond}
     */
    default S branchGt(long dst, Register cond) {
        var opcode = OpCodes.L0_BRANCH_GT;
        opcode |= dst & 0x3fffff;
        opcode |= (cond.num() & 0x1f) << 22;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code branch.le i22 Xcond}
     */
    default S branchLe(long dst, Register cond) {
        var opcode = OpCodes.L0_BRANCH_LE;
        opcode |= dst & 0x3fffff;
        opcode |= (cond.num() & 0x1f) << 22;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code branch.ge i22 Xcond}
     */
    default S branchGe(long dst, Register cond) {
        var opcode = OpCodes.L0_BRANCH_GE;
        opcode |= dst & 0x3fffff;
        opcode |= (cond.num() & 0x1f) << 22;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code shl Xdst Xlhs u11}
     */
    default S shl(Register dst, Register lhs, long rhs) {
        var opcode = OpCodes.L1_SHL;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs & 0x7ff) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code shr Xdst Xlhs u11}
     */
    default S shr(Register dst, Register lhs, long rhs) {
        var opcode = OpCodes.L1_SHR;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs & 0x7ff) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code shrs Xdst Xlhs u11}
     */
    default S shrs(Register dst, Register lhs, long rhs) {
        var opcode = OpCodes.L1_SHRS;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs & 0x7ff) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code ldr Xdst Xsrc i11}
     */
    default S ldr(Register dst, Register src, long offset) {
        var opcode = OpCodes.L1_LDR;
        opcode |= dst.num() & 0x1f;
        opcode |= (src.num() & 0x1f) << 5;
        opcode |= (offset & 0x7ff) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code ldrb Xdst Xsrc i11}
     */
    default S ldrb(Register dst, Register src, long offset) {
        var opcode = OpCodes.L1_LDRB;
        opcode |= dst.num() & 0x1f;
        opcode |= (src.num() & 0x1f) << 5;
        opcode |= (offset & 0x7ff) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code ldrh Xdst Xsrc i11}
     */
    default S ldrh(Register dst, Register src, long offset) {
        var opcode = OpCodes.L1_LDRH;
        opcode |= dst.num() & 0x1f;
        opcode |= (src.num() & 0x1f) << 5;
        opcode |= (offset & 0x7ff) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code ldrw Xdst Xsrc i11}
     */
    default S ldrw(Register dst, Register src, long offset) {
        var opcode = OpCodes.L1_LDRW;
        opcode |= dst.num() & 0x1f;
        opcode |= (src.num() & 0x1f) << 5;
        opcode |= (offset & 0x7ff) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code str Xdst Xsrc i11}
     */
    default S str(Register dst, Register src, long offset) {
        var opcode = OpCodes.L1_STR;
        opcode |= dst.num() & 0x1f;
        opcode |= (src.num() & 0x1f) << 5;
        opcode |= (offset & 0x7ff) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code strb Xdst Xsrc i11}
     */
    default S strb(Register dst, Register src, long offset) {
        var opcode = OpCodes.L1_STRB;
        opcode |= dst.num() & 0x1f;
        opcode |= (src.num() & 0x1f) << 5;
        opcode |= (offset & 0x7ff) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code strh Xdst Xsrc i11}
     */
    default S strh(Register dst, Register src, long offset) {
        var opcode = OpCodes.L1_STRH;
        opcode |= dst.num() & 0x1f;
        opcode |= (src.num() & 0x1f) << 5;
        opcode |= (offset & 0x7ff) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code strw Xdst Xsrc i11}
     */
    default S strw(Register dst, Register src, long offset) {
        var opcode = OpCodes.L1_STRW;
        opcode |= dst.num() & 0x1f;
        opcode |= (src.num() & 0x1f) << 5;
        opcode |= (offset & 0x7ff) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code int u16}
     */
    default S interrupt(long id) {
        var opcode = OpCodes.L1_INT;
        opcode |= id & 0xffff;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code n_call u21}
     */
    default S n_call(long id) {
        var opcode = OpCodes.L1_N_CALL;
        opcode |= id & 0x1fffff;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code v_call u21}
     */
    default S v_call(long id) {
        var opcode = OpCodes.L1_V_CALL;
        opcode |= id & 0x1fffff;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code add Xdst Xlhs Xrhs}
     */
    default S add(Register dst, Register lhs, Register rhs) {
        var opcode = OpCodes.L2_ADD;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs.num() & 0x1f) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code sub Xdst Xlhs Xrhs}
     */
    default S sub(Register dst, Register lhs, Register rhs) {
        var opcode = OpCodes.L2_SUB;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs.num() & 0x1f) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code mul Xdst Xlhs Xrhs}
     */
    default S mul(Register dst, Register lhs, Register rhs) {
        var opcode = OpCodes.L2_MUL;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs.num() & 0x1f) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code div Xdst Xlhs Xrhs}
     */
    default S div(Register dst, Register lhs, Register rhs) {
        var opcode = OpCodes.L2_DIV;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs.num() & 0x1f) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code adds Xdst Xlhs Xrhs}
     */
    default S adds(Register dst, Register lhs, Register rhs) {
        var opcode = OpCodes.L2_ADDS;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs.num() & 0x1f) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code subs Xdst Xlhs Xrhs}
     */
    default S subs(Register dst, Register lhs, Register rhs) {
        var opcode = OpCodes.L2_SUBS;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs.num() & 0x1f) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code muls Xdst Xlhs Xrhs}
     */
    default S muls(Register dst, Register lhs, Register rhs) {
        var opcode = OpCodes.L2_MULS;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs.num() & 0x1f) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code divs Xdst Xlhs Xrhs}
     */
    default S divs(Register dst, Register lhs, Register rhs) {
        var opcode = OpCodes.L2_DIVS;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs.num() & 0x1f) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code addf Xdst Xlhs Xrhs}
     */
    default S addf(Register dst, Register lhs, Register rhs) {
        var opcode = OpCodes.L2_ADDF;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs.num() & 0x1f) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code subf Xdst Xlhs Xrhs}
     */
    default S subf(Register dst, Register lhs, Register rhs) {
        var opcode = OpCodes.L2_SUBF;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs.num() & 0x1f) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code mulf Xdst Xlhs Xrhs}
     */
    default S mulf(Register dst, Register lhs, Register rhs) {
        var opcode = OpCodes.L2_MULF;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs.num() & 0x1f) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code divf Xdst Xlhs Xrhs}
     */
    default S divf(Register dst, Register lhs, Register rhs) {
        var opcode = OpCodes.L2_DIVF;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs.num() & 0x1f) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code and Xdst Xlhs Xrhs}
     */
    default S and(Register dst, Register lhs, Register rhs) {
        var opcode = OpCodes.L2_AND;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs.num() & 0x1f) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code or Xdst Xlhs Xrhs}
     */
    default S or(Register dst, Register lhs, Register rhs) {
        var opcode = OpCodes.L2_OR;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs.num() & 0x1f) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code xor Xdst Xlhs Xrhs}
     */
    default S xor(Register dst, Register lhs, Register rhs) {
        var opcode = OpCodes.L2_XOR;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs.num() & 0x1f) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code shl Xdst Xlhs Xrhs}
     */
    default S shl(Register dst, Register lhs, Register rhs) {
        var opcode = OpCodes.L2_SHL;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs.num() & 0x1f) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code shr Xdst Xlhs Xrhs}
     */
    default S shr(Register dst, Register lhs, Register rhs) {
        var opcode = OpCodes.L2_SHR;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs.num() & 0x1f) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code shrs Xdst Xlhs Xrhs}
     */
    default S shrs(Register dst, Register lhs, Register rhs) {
        var opcode = OpCodes.L2_SHRS;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs.num() & 0x1f) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code cmp Xdst Xlhs Xrhs}
     */
    default S cmp(Register dst, Register lhs, Register rhs) {
        var opcode = OpCodes.L2_CMP;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs.num() & 0x1f) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code cmps Xdst Xlhs Xrhs}
     */
    default S cmps(Register dst, Register lhs, Register rhs) {
        var opcode = OpCodes.L2_CMPS;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs.num() & 0x1f) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code cmpf Xdst Xlhs Xrhs}
     */
    default S cmpf(Register dst, Register lhs, Register rhs) {
        var opcode = OpCodes.L2_CMPF;
        opcode |= dst.num() & 0x1f;
        opcode |= (lhs.num() & 0x1f) << 5;
        opcode |= (rhs.num() & 0x1f) << 10;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code not Xdst Xsrc}
     */
    default S not(Register dst, Register src) {
        var opcode = OpCodes.L3_NOT;
        opcode |= dst.num() & 0x1f;
        opcode |= (src.num() & 0x1f) << 5;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code mov Xdst Xsrc}
     */
    default S mov(Register dst, Register src) {
        var opcode = OpCodes.L3_MOV;
        opcode |= dst.num() & 0x1f;
        opcode |= (src.num() & 0x1f) << 5;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code branch Xdst}
     */
    default S branch(Register dst) {
        var opcode = OpCodes.L4_BRANCH;
        opcode |= dst.num() & 0x1f;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code branch.l Xdst}
     */
    default S branchL(Register dst) {
        var opcode = OpCodes.L4_BRANCH_L;
        opcode |= dst.num() & 0x1f;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code branch.ld Xdst}
     */
    default S branchLd(Register dst) {
        var opcode = OpCodes.L4_BRANCH_LD;
        opcode |= dst.num() & 0x1f;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code branch.l.ld Xdst}
     */
    default S branchLLd(Register dst) {
        var opcode = OpCodes.L4_BRANCH_L_LD;
        opcode |= dst.num() & 0x1f;
        addInstruction(new RawInstruction(opcode));
        return (S) this;
    }

    /**
     * {@code nop}
     */
    default S nop() {
        addInstruction(new RawInstruction(OpCodes.L5_NOP));
        return (S) this;
    }

    /**
     * {@code halt}
     */
    default S halt() {
        addInstruction(new RawInstruction(OpCodes.L5_HALT));
        return (S) this;
    }
}
